# -*- mode: shell-script -*-

alias ip='ipython'
alias em='emacs -nw'
alias f='find . -name'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias cdl='cd  "$(\ls -1dt ./*/ | head -n 1)"'
alias ccat='pygmentize -O style=monokai -f console256 -g'
alias pipi='pip install'
alias ip='ipython'

alias urpad='ssh -X bcoste@209.148.83.200'

# cd to the most recently modified directory (mnemonic: cd last)
function cdl {
    dir=$(ls -lrtd */ | tail -1 | awk '{print $9}')
    cd $dir
}

# a 'cd' followed by 'ls -lrt'
function c {
    cd $1 && ls -lrt;
}

# open file as if double-clicked on
function o {
    xdg-open "$@"
}

# Open a file in Emacs
function e {
    emacsclient -n $1
}

# Filter the input to select the given line and row
# Example: ls -lrt | sel 2 8 # to get the modification time of the 2nd file
function sel(){
    # To be used in conjonction with the pipe to select a given line and column from stdout
    line=$1
    col=$2

    if [[ "$line" == "" ]]; then
        line=1
    fi

    if [[ "$col" == "" ]]; then
        col=9
    fi

    count=1
    while [ $count -le $line ]
    do
        read str
        (( count++ ))
    done

    if [[ "$col" -eq "0" ]]; then
        echo $str
    else
        echo $str | awk '{print $'$col'}'
    fi
}

# Copy the output of the command to clipboard
# Example: "clip pwd" to copy the current path to clipboard
function clip {
	  $@ | xclip -selection clipboard
}

# Recursively search for a file starting a current dir
function f {
	  find . -name $@
}

# Return the last modified file in the current directory
function lf {
	  ls -Art | tail -n 1
}

# Open less on the last modified file
function lastless {
	  less $(lf)
}

# Open vim on the last modified file
function lastvim {
	  vim $(lf)
}

# Call first argument (which has to be a function) with each other arguments
# Example: foreach xdg-open *.png
function foreach {
    func=$1
    for f in "${@:2}"; do
        $func $f
    done
}
